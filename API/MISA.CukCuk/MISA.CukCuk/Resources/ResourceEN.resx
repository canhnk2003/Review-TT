<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_BOfDateNotGreatNow" xml:space="preserve">
    <value>Date of birth cannot be greater than the current date!</value>
    <comment>Error date of birth is greater than current date</comment>
  </data>
  <data name="Error_Create" xml:space="preserve">
    <value>Adding data failed!</value>
    <comment>Error adding data</comment>
  </data>
  <data name="Error_Delete" xml:space="preserve">
    <value>Deleting data failed!</value>
    <comment>Error deleting data</comment>
  </data>
  <data name="Error_Edit" xml:space="preserve">
    <value>Updating data failed!</value>
    <comment>Error updating data</comment>
  </data>
  <data name="Error_EmailNotEmpty" xml:space="preserve">
    <value>Email addresses cannot be left blank!</value>
    <comment>Empty email error</comment>
  </data>
  <data name="Error_EmployeeCodeDuplicated" xml:space="preserve">
    <value>Employee code already exists!</value>
    <comment>Employee code error already exists</comment>
  </data>
  <data name="Error_EmployeeCodeNotEmpty" xml:space="preserve">
    <value>Employee code cannot be left blank!</value>
    <comment>Empty employee code error</comment>
  </data>
  <data name="Error_EmployeeNameNotNumber" xml:space="preserve">
    <value>Employee names are not allowed to have numbers!</value>
    <comment>Error: full name has number</comment>
  </data>
  <data name="Error_Exception" xml:space="preserve">
    <value>An error occurred, please contact MISA for help!</value>
    <comment>Lỗi ngoại lệ</comment>
  </data>
  <data name="Error_FullNameNotEmpty" xml:space="preserve">
    <value>Employee names cannot be left blank!</value>
    <comment>Lỗi họ tên để trống</comment>
  </data>
  <data name="Error_IdentityDateNotGreatNow" xml:space="preserve">
    <value>The issue date cannot be greater than the current date!</value>
    <comment>Lỗi ngày cấp lớn hơn ngày hiện tại</comment>
  </data>
  <data name="Error_IdentityNumberNotDigit" xml:space="preserve">
    <value>ID card is not allowed to have letters!</value>
    <comment>Lỗi CMTND, CCCD có chữ</comment>
  </data>
  <data name="Error_IdentityNumberNotEmpty" xml:space="preserve">
    <value>ID card cannot be left blank!</value>
    <comment>Lỗi CMTND, CCCD trống</comment>
  </data>
  <data name="Error_NotFound" xml:space="preserve">
    <value>Data does not exist!</value>
    <comment>Lỗi không tìm thấy</comment>
  </data>
  <data name="Error_PhoneNumberNotDigit" xml:space="preserve">
    <value>Phone numbers are not allowed to have letters!</value>
    <comment>Lỗi SĐT có chữ</comment>
  </data>
  <data name="Error_PhoneNumberNotEmpty" xml:space="preserve">
    <value>Phone numbers cannot be left blank!</value>
    <comment>Lỗi số điện thoại trống</comment>
  </data>
  <data name="Error_PositionCodeDuplicated" xml:space="preserve">
    <value>Position code already exists!</value>
    <comment>Lỗi mã vị trí đã tồn tại</comment>
  </data>
  <data name="Error_PositionCodeNotEmpty" xml:space="preserve">
    <value>Position codes cannot be left blank!</value>
    <comment>Lỗi mã vị trí để trống</comment>
  </data>
  <data name="Error_PositionNameNotEmpty" xml:space="preserve">
    <value>Position names cannot be left blank!</value>
    <comment>Lỗi tên vị trí để trống</comment>
  </data>
  <data name="Error_PositionNameNotNumber" xml:space="preserve">
    <value>Position names cannot contain numbers!</value>
    <comment>Lỗi tên vị trí có số</comment>
  </data>
  <data name="Error_ValidData" xml:space="preserve">
    <value>Invalid input!</value>
    <comment>Lỗi không hợp lệ dữ liệu</comment>
  </data>
  <data name="Error_ValidEmail" xml:space="preserve">
    <value>Email is not in the correct format, please re-enter!</value>
    <comment>Lỗi email không hợp lệ</comment>
  </data>
</root>